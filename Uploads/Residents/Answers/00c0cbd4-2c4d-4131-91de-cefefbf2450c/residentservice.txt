(function () {
    "use strict";

    angular.module('CHM').factory('ResidentsService', ResidentsService);

    ResidentsService.$inject = ['$rootScope', '$q', '$http', '$window'];

    function ResidentsService($rootScope, $q, $http, $window) {

        var objResidentsService = {};

        objResidentsService.GetActiveResidents = getActiveResidents;
        objResidentsService.GetActiveSections = getActiveSections;
        objResidentsService.UploadPhoto = uploadPhoto;
        objResidentsService.SavePersonalInformation = savePersonalInformation;
        objResidentsService.UpdatePersonalInformation = updatePersonalInformation;
        objResidentsService.GetPersonalInformation = getPersonalInformation;
        objResidentsService.GetAssessmentData = getAssessmentData;
        objResidentsService.SaveAssessmentData = saveAssessmentData;
        objResidentsService.UpdateAssessmentData = updateAssessmentData;
        objResidentsService.GetAssessmentSummary = getAssessmentSummary;
        objResidentsService.AcceptAsResident = acceptAsResident;
        objResidentsService.GetTaskTitlesForResident = getTaskTitlesForResident;
        objResidentsService.getSectionQuestionByID = getSectionQuestionByID;
        objResidentsService.GetResidentSummaryByID = GetResidentSummaryByID;
        objResidentsService.getAllActiveQuestionParentQuestion = getAllActiveQuestionParentQuestion;
        return objResidentsService;

        function getActiveResidents() {
            return $http.get($rootScope.ApiPath + 'Residents/GetActiveResidents');
        }

        function getActiveSections() {
            return $http.get($rootScope.ApiPath + 'Sections/GetActiveSections');
        }

        function savePersonalInformation(resident) {
            resident.OrganizationId = $rootScope.OrganizationId;
            return $http.post($rootScope.ApiPath + 'Residents/SaveResident', resident);
        }

        function updatePersonalInformation(resident) {
            return $http.post($rootScope.ApiPath + 'Residents/UpdateResident', resident);
        }

        function uploadPhoto(file, residentId) {
            var fd = new FormData();
            fd.append('file', file);
            fd.append('ResidentId', residentId);
            return $http.post($rootScope.ApiPath + 'Residents/UploadPhoto', fd, {
                transformRequest: angular.identity,
                headers: { 'Content-Type': undefined }
            });
        }

        function getPersonalInformation(residentId) {
            return $http.post($rootScope.ApiPath + 'Residents/GetResident?residentId=' + residentId);
        }

        function getAssessmentData(residentId) {
            return $http.post($rootScope.ApiPath + 'Residents/GetAssessmentData?residentId=' + residentId);
        }

        function saveAssessmentData(lstAssessmentData) {
            return $http.post($rootScope.ApiPath + 'Residents/SaveAssessmentData', lstAssessmentData);
        }

        function updateAssessmentData(residentId, lstAssessmentData) {
            var fd = new FormData();
            for (var i = 0; i < lstAssessmentData.length; i++) {
                if (lstAssessmentData[i].FileData) {
                    fd.append(lstAssessmentData[i].Section_Question_AnswerId, lstAssessmentData[i].FileData);
                    delete lstAssessmentData[i].FileData;
                }
            }
            
            fd.append('Answers', JSON.stringify(lstAssessmentData));
            return $http.post($rootScope.ApiPath + 'Residents/UpdateAssessmentDataWithFiles?residentId=' + residentId, fd, {
                transformRequest: angular.identity,
                headers: { 'Content-Type': undefined }
            });
        }

        function getAssessmentSummary(residentId) {
            return $http.post($rootScope.ApiPath + 'Residents/GetAssessmentSummary?residentId=' + residentId);
        }

        function acceptAsResident(residentId) {
            return $http.post($rootScope.ApiPath + 'Residents/AcceptAsResident?residentId=' + residentId);
        }

        function getTaskTitlesForResident(residentId) {
            return $http.post($rootScope.ApiPath + 'Residents/GetTaskTitlesForResident?residentId=' + residentId);
        }
        

        function getSectionQuestionByID(SecQueID) {
            return $http.get($rootScope.ApiPath + 'SectionsQuestions/GetActiveSectionsQuestionsByID?SecQueID=' + SecQueID);
        }

        //function GetResidentSummary(residentId) {
        //    return $http.post($rootScope.ApiPath + 'Residents/GetTaskTitlesForResident?residentId=' + residentId);
        //}

        function GetResidentSummaryByID(ResidentId)
        {
            return $http.get($rootScope.ApiPath + 'Residents/GetResidentSummary?residentId=' + ResidentId);
        }
        function getAllActiveQuestionParentQuestion() {
            return $http.get($rootScope.ApiPath + 'QuestionParentQuestion/GetAllQuestionParentQuestion');
        }
    }

}());